// –í–≤–µ–¥–µ–Ω–∏–µ
// –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// –ù–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å this
// let –∏ const
// Promises
// Generators
// –ö–ª–∞—Å—Å—ã
// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
// super
// Getters and setters
// –ú–æ–¥—É–ª–∏
// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
// –≠–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
// –®–∞–±–ª–æ–Ω–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã (Template Literals)
// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
// –û–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è spread
// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª–æ–≤ –æ–±—ä–µ–∫—Ç–∞
// –ë–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
// –ü—Ä–æ—Ç–æ—Ç–∏–ø
// super()
// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
// –¶–∏–∫–ª for-of
// Map –∏ Set
// –ù–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã
// –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞
// –í–≤–µ–¥–µ–Ω–∏–µ
// ECMAScript - —ç—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ—Å–Ω–æ–≤–∞–Ω JavaScript, –∏ –µ–≥–æ —á–∞—Å—Ç–æ –Ω–∞–∑—ã–≤–∞—é—Ç ES.

// ECMAScript 2015, —Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–∫ ES6, —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞ ECMAScript.

// –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π —á–µ—Ä–µ–∑ 4 –≥–æ–¥–∞ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞ ECMAScript 5.1, –æ–Ω —Ç–∞–∫–∂–µ –æ–±–æ–∑–Ω–∞—á–∏–ª –ø–µ—Ä–µ—Ö–æ–¥ —Å –Ω–æ–º–µ—Ä–∞ –∏–∑–¥–∞–Ω–∏—è –Ω–∞ –Ω–æ–º–µ—Ä –≥–æ–¥–∞.

// –ü–æ—ç—Ç–æ–º—É –µ–≥–æ —Å–ª–µ–¥—É–µ—Ç –Ω–∞–∑—ã–≤–∞—Ç—å –Ω–µ ES6 (—Ö–æ—Ç—è –≤—Å–µ –Ω–∞–∑—ã–≤–∞—é—Ç –µ–≥–æ —Ç–∞–∫–æ–≤—ã–º), –∞ ES2015.

// ES5 —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–ª—Å—è 10 –ª–µ—Ç, —Å 1999 –ø–æ 2009 –≥–æ–¥, –∏ –∫–∞–∫ —Ç–∞–∫–æ–≤–æ–π –æ–Ω —Ç–∞–∫–∂–µ –±—ã–ª —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–º –∏ –∫—Ä–∞–π–Ω–µ –≤–∞–∂–Ω—ã–º –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–æ–º —è–∑—ã–∫–∞.

// –ü–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–æ—Ç –¥–ª–∏–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—à–µ–ª –º–µ–∂–¥—É ES5.1 –∏ ES6, –≤—ã–ø—É—Å–∫ –ø–æ–ª–æ–Ω –≤–∞–∂–Ω—ã—Ö –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º –Ω–∞ JavaScript. –ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª–µ–Ω ES2015, –ø—Ä–æ—Å—Ç–æ –∏–º–µ–π –≤ –≤–∏–¥—É, —á—Ç–æ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ —É–≤–µ–ª–∏—á–∏–ª—Å—è —Å 250 —Å—Ç—Ä–∞–Ω–∏—Ü –¥–æ 600.

// –í —ç—Ç–æ–π —Å—Ç–∞—Ç—å–µ –æ–ø–∏—Å–∞–Ω—ã –Ω–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è üòâ.

// –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
// –° –º–æ–º–µ–Ω—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–∏ —Ç–æ, –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å JavaScript –∫–æ–¥–∞.

// –í–∏–∑—É–∞–ª—å–Ω–æ, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ –∏ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏—è:

// const name = function name() {
//   console.log("my name is Alex");
// };
// –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤

// const name = () => {
//   console.log("my name is Alex");
// };
// –ï—Å–ª–∏ —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–º, —Ç–æ –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏:

// const name = () => console.log("my name is Alex");
// –¢–∞–∫–∂–µ, –µ—Å–ª–∏ —É —Ç–µ–±—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–æ –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –∫—Ä—É–≥–ª—ã–µ —Å–∫–æ–±–∫–∏:

// const name = (param) => console.log(`my name is ${param}`);
// –≠—Ç–æ –Ω–µ —Å–µ—Ä—å–µ–∑–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ, –æ–±—ã—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ.

// –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –æ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö –∑–¥–µ—Å—å.

// –ù–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å this
// –ó–Ω–∞—á–µ–Ω–∏–µ this –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ç–µ–º, –∫–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è. –í JavaScript –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ this –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ–±—ä–µ–∫—Ç—É, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ–Ω–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç.

// –û–Ω–æ –∏–º–µ–µ—Ç —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –≥–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è:

// –≤ –º–µ—Ç–æ–¥–µ, this –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ–±—ä–µ–∫—Ç—É, –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã–∑–≤–∞–Ω –º–µ—Ç–æ–¥;
// –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è this —Å—Å—ã–ª–∞–µ—Ç—Å—è –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É;
// –≤ —Ñ—É–Ω–∫—Ü–∏–∏, –∑–Ω–∞—á–µ–Ω–∏–µ this –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è;
// –≤ –æ–±—ã—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ this –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É;
// –≤ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö, this –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –æ–∫—Ä—É–∂–µ–Ω–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è;
// –≤ —Å—Ç—Ä–æ–≥–æ–º —Ä–µ–∂–∏–º–µ —Ñ—É–Ω–∫—Ü–∏–∏, this –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –µ—Å–ª–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ–Ω –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è;
// –≤ —Å–æ–±—ã—Ç–∏–∏ this –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —ç–ª–µ–º–µ–Ω—Ç—É, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏–ª —Å–æ–±—ã—Ç–∏–µ;
// —Ç–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã, –∫–∞–∫ call() –∏ apply() –º–æ–≥—É—Ç —Å—Å—ã–ª–∞—Ç—å this –Ω–∞ –ª—é–±–æ–π –æ–±—ä–µ–∫—Ç.
// let –∏ const
// –ï—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ ES6: –æ–±—ä—è–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é var (–∫–æ—Ç–æ—Ä—ã–π –º—ã –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏), –ø–ª—é—Å —Å–µ–π—á–∞—Å –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å let –∏ const.

// –≠—Ç–∏ –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞ –∏–º–µ—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –Ω–∞—Å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö. –ù–æ –¥–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ–±–∑–æ—Ä, –∫–∞–∫ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è var, let –∏ const.

// –í–æ-–ø–µ—Ä–≤—ã—Ö, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ var –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –ù–∞–ø—Ä–∏–º–µ—Ä:

// var width = 100;
// console.log(width); // 100
// width = 200;
// console.log(width); // 200
// –¢–∞–∫–∂–µ –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç ‚Äú–∫—Ä–∏—á–∞—Ç—å‚Äù –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –∏–º–µ–Ω–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–≤–∞–∂–¥—ã –≤ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏, —Ç–∞–∫ –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ var –º–æ–≥—É—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏–ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã.

// –¢–∞–∫–∂–µ –≤–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å, –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ var –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã. –ü–æ —Å—É—Ç–∏, scoping –∏–ª–∏ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –æ–∑–Ω–∞—á–∞–µ—Ç ¬´–ì–¥–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –º–µ–Ω—è?¬ª. –í —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö var –æ–Ω–∏ —è–≤–ª—è—é—Ç—Å—è –æ–±–ª–∞—Å—Ç—å—é –¥–µ–π—Å—Ç–≤–∏—è —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∏ —Å–æ–∑–¥–∞–Ω—ã. –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –æ–±—ä—è–≤–ª–µ–Ω—ã –≤ —Ñ—É–Ω–∫—Ü–∏–∏, —Ç–æ –æ–Ω–∏ –∏–º–µ—é—Ç –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤–æ –≤—Å–µ–º –æ–∫–Ω–µ.

// var - —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å.

// let - —ç—Ç–æ –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∫–æ—Ç–æ—Ä–∞—è –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏.

// –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö let –≤ —Ü–∏–∫–ª–µ for, –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ if –∏–ª–∏ –≤ –æ–±—ã—á–Ω–æ–º –±–ª–æ–∫–µ, –Ω–µ –ø–æ–∑–≤–æ–ª–∏—Ç —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ¬´–ø–æ–∫–∏–Ω—É—Ç—å¬ª –±–ª–æ–∫, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ var –ø–æ–¥–Ω–∏–º–µ—Ç—Å—è –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏.

// const –ø–æ—Ö–æ–∂ –Ω–∞ let, –Ω–æ –æ–Ω –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–π, –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ (–ø–æ—á—Ç–∏!). –ï—Å–ª–∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ —Ç–æ —ç—Ç–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é const, —Ç–∞–∫ –∫–∞–∫ let.

// –¢—ã –º–æ–∂–µ—à—å —Ä–µ—à–∏—Ç—å —á—Ç–æ const - –Ω–µ–∏–∑–º–µ–Ω–µ–Ω. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç:

// const person = {
//   name: "Alex",
//   age: 28,
// };
// –∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é const, –Ω–∞–±—Ä–∞–≤ person = { name: 'Alexey' }, —Ç–æ —É —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –û–¥–Ω–∞–∫–æ —Å–≤–æ–π—Å—Ç–≤–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π const –º–æ–≥—É—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è. –≠—Ç–æ –ø–æ—Ç–æ–º—É, —á—Ç–æ –≤–µ—Å—å –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º. –ï–≥–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é. –ù–∞–ø—Ä–∏–º–µ—Ä:

// const person = {
//   name: "Alex",
//   age: 28,
// };

// person.name = "Alexey";
// –≠—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –≤—Å—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é.

// Promises
// Promises (–¥–∞–ª–µ–µ –ø–æ —Ç–µ–∫—Å—Ç—É - ‚Äú–ø—Ä–æ–º–∏—Å—ã‚Äù) –ø–æ–∑–≤–æ–ª—è—é—Ç –Ω–∞–º —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –∏–∑–≤–µ—Å—Ç–Ω—ã–π ¬´callback hell¬ª –∏–ª–∏ ¬´–∞–¥ –æ–±—Ä–∞—Ç–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤¬ª, —Ö–æ—Ç—è –æ–Ω–∏ –≤–Ω–µ—Å–ª–∏ –Ω–µ–±–æ–ª—å—à–∏–µ —É—Å–ª–æ–∂–Ω–µ–Ω–∏—è (–∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Ä–µ—à–µ–Ω—ã –≤ ES2017 —Å –ø–æ–º–æ—â—å—é async- –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è).

// –ü—Ä–æ–º–∏—Å—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ JavaScript –∑–∞–¥–æ–ª–≥–æ –¥–æ ES2015, —Ç–æ–ª—å–∫–æ —Å –ø–æ–º–æ—â—å—é –º–Ω–æ–∂–µ—Å—Ç–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫, –∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç –Ω–∞—à–µ–ª –æ–±—â–∏–π —è–∑—ã–∫ –º–µ–∂–¥—É –Ω–∏–º–∏.

// –ò—Å–ø–æ–ª—å–∑—É—è –ø—Ä–æ–º–∏—Å, —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥

// setTimeout(function () {
//   console.log("I promised to run after 1s");
//   setTimeout(function () {
//     console.log("I promised to run after 2s");
//   }, 1000);
// }, 1000);
// –Ω–∞ —ç—Ç–æ—Ç.

// const wait = () =>
//   new Promise((resolve, reject) => {
//     setTimeout(resolve, 1000);
//   });

// wait()
//   .then(() => {
//     console.log("I promised to run after 1s");
//     return wait();
//   })
//   .then(() => console.log("I promised to run after 2s"));
// –ü—Ä–æ–º–∏—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ - resolved –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω - rejected. –ö–æ–≥–¥–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—à—å –ø—Ä–æ–º–∏—Å, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è then(), –∞ –∫–æ–≥–¥–∞ –æ—Ç–∫–ª–æ–Ω—è–µ—à—å –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è catch(). –û–±—ã—á–Ω–æ, –≤–Ω—É—Ç—Ä–∏ —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–º–∏—Å–∞, —É —Ç–µ–±—è –µ—Å—Ç—å –∫–∞–∫–∞—è-—Ç–æ –ª–æ–≥–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ—à–∞–µ—Ç, –±—É–¥–µ—Ç–µ –ª–∏ –ø—Ä–æ–º–∏—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω. –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Ç–∞–∫, –∫–∞–∫ –µ—Å–ª–∏ –±—ã –æ–Ω–∏ –±—ã–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏. –í–º–µ—Å—Ç–æ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ø—Ä–æ–º–∏—Å (–æ–±–µ—â–∞–Ω–∏–µ) –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–∞–∫–æ–π-—Ç–æ –º–æ–º–µ–Ω—Ç –≤ –±—É–¥—É—â–µ–º.

// Generators
// Generators - —ç—Ç–æ –æ—Å–æ–±—ã–π —Ç–∏–ø —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –∞ –ø–æ—Ç–æ–º –ø–æ–∑–∂–µ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –¥—Ä—É–≥–æ–π –∫–æ–¥ –≤ –º–æ–º–µ–Ω—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏. function —Å–æ –∑–≤—ë–∑–¥–æ—á–∫–æ–π function* –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä.

// function* strGenerator() {
//   // function* // —Ñ—É–Ω–∫—Ü–∏—é –æ–±–æ–∑–Ω–∞—á–∞–µ–º –∑–≤–µ–∑–¥–æ—á–∫–æ–π //
//   yield 'H'
//   yield 'e'
//   yield 'l'
//   yield 'l'
//   yield 'o'
// }
// const str = strGenerator()

// console.log(str.next()) // { value: 'H', done: false }
// console.log(str.next()) // { value: 'e', done: false }
// console.log(str.next()) // { value: 'l', done: false }
// console.log(str.next()) // { value: 'l', done: false }
// console.log(str.next()) // { value: 'o', done: false }
// console.log(str.next()) // { value: undefined, done: true } // –∫–æ–≥–¥–∞ –∑–∞–∫–∞—á–∏–≤–∞—é—Ç—Å—è value –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –æ–±–µ–∫—Ç —Å —Ç–∞–∫–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ done: true//

// function* numberGen(n = 10) {
//   for (let i = 0; i < n; i++) {
//     yield i
//   }
// }
// const num = numberGen(7)
// console.log(num.next())
// console.log(num.next())
// console.log(num.next())
// console.log(num.next())
// console.log(num.next())
// console.log(num.next())
// console.log(num.next())
// console.log(num.next()) // done: true

// const iterator = {
//   gen(n = 10) {
//     let i = 0
//     return {
//       next() {
//         if (i < n) {
//           return { value: ++i, done: false }
//         }
//         return { value: undefined, done: true }
//       },
//     }
//   },
// }
// const itr = iterator.gen(3)
// console.log(itr.next())
// console.log(itr.next())
// console.log(itr.next())
// console.log(itr.next()) // done: true // –º—ã –ø–æ–∞—Ç–æ—Ä–∏–ª–∏ –ª–æ–≥–∏–∫—É –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ , –±–µ–∑ —Å–∞–º–æ–≥–æ –∫–ª–∞—Å—Å–∞ Generator //

// for (const k of iterator) {
//     console.log(k)
//   } // Error //

// Symbol.iterator // Array method //

// const iterator = {
//   [Symbol.iterator](n = 10) {
//     let i = 0
//     return {
//       next() {
//         if (i < n) {
//           return { value: ++i, done: false }
//         }
//         return { value: undefined, done: true }
//       },
//     }
//   },
// }
// for (const k of iterator) {
//   console.log(k)
// } // work with Symbol.iterator key

// function* iter(n = 10) {
//   for (let i = 0; i < n; i++) {
//     yield i
//   }
// }
// for (const k of iter(6)) {
//   console.log(k)
// } // Work with Generator and for/of//

// –ö–ª–∞—Å—Å—ã
// –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ JavaScript - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Å–Ω–æ–≤–Ω–æ–π —è–∑—ã–∫ —Å –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤. ES2015 –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª –∫–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –ø—Ä–æ—Å—Ç–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–º —Å–∞—Ö–∞—Ä–æ–º –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–∞–±–æ—Ç—ã, —á—Ç–æ —Å–∏–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª —Ç–æ, –∫–∞–∫ –º—ã —Å—Ç—Ä–æ–∏–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ JavaScript.

// –¢–µ–ø–µ—Ä—å –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–µ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏ –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è:

// class Person {
//   constructor(name) {
//     this.name = name;
//   }

//   hello() {
//     return "Hello, I am " + this.name + ".";
//   }
// }

// class Developer extends Person {
//   hello() {
//     return super.hello() + " I am a Frontend Developer.";
//   }
// }

// const me = new Developer("Alex");
// console.log(me.hello()); // Hello, I am Alex. I am a Frontend Developer.
// –ö–ª–∞—Å—Å—ã –Ω–µ –∏–º–µ—é—Ç —è–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–∞, –Ω–æ —Ç—ã –¥–æ–ª–∂–µ–Ω –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª—é–±—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ.

// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
// –ö–ª–∞—Å—Å—ã –∏–º–µ—é—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ —Å –∏–º–µ–Ω–µ–º constructor, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –∫–ª–∞—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é new. –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π constructor –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –µ—Å–ª–∏ —É –ø–æ—Ç–æ–º–∫–∞ –Ω–µ—Ç —Å–≤–æ–µ–≥–æ –º–µ—Ç–æ–¥–∞ constructor. –ï—Å–ª–∏ –∂–µ –ø–æ—Ç–æ–º–æ–∫ –∏–º–µ–µ—Ç —Å–≤–æ–π constructor, —Ç–æ, —á—Ç–æ–±—ã —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ä–æ–¥–∏—Ç–µ–ª—è –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å super() —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è.

// super
// –°–ª–æ–≤–æ super –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–π, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏—Ö —Ä–æ–¥–∏—Ç–µ–ª—é –æ–±—ä–µ–∫—Ç–∞.

// Getters and setters
// –ì–µ—Ç—Ç–µ—Ä—ã –º–æ–≥—É—Ç –±—ã—Ç—å –æ–±—ä—è–≤–ª–µ–Ω—ã –∫–∞–∫:

// class Person {
//   get fullName() {
//     return `${this.firstName} ${this.lastName}`;
//   }
// }
// get —Å–≤—è–∑—ã–≤–∞–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —ç—Ç–æ–º—É —Å–≤–æ–π—Å—Ç–≤—É.

// –°–µ—Ç—Ç–µ—Ä—ã –ø–∏—à—É—Ç—Å—è —Ç–∞–∫ –∂–µ:

// class Person {
//   set age(years) {
//     this.theAge = years;
//   }
// }
// set —Å–≤—è–∑—ã–≤–∞–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π, –æ–Ω –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ.

// –ú–æ–¥—É–ª–∏
// –î–æ ES2015 —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ –Ω–µ –º–µ–Ω–µ–µ 3-—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π, –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏—Ö —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–¥–µ–ª–∏–ª–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ:

// AMD
// RequireJS
// CommonJS
// ES2015 —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–ª –∏—Ö –≤ –æ–±—â–∏–π —Ñ–æ—Ä–º–∞—Ç.

// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
// import –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è, —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –º–æ–¥—É–ª—è, –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é import ... from ...:

// import defaultExport from "module-name";
// import * as name from "module-name";
// import * from 'module-name'
// import { namedExport } from 'module-name'
// import "module-name";
// –≠–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
// –≠–∫—Å–ø–æ—Ä—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π, –æ–±—ä–µ–∫—Ç–æ–≤. –¢—ã –º–æ–∂–µ—à—å –ø–∏—Å–∞—Ç—å –º–æ–¥—É–ª–∏ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ –≤ –¥—Ä—É–≥–∏–µ –º–æ–¥—É–ª–∏, –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ export:

// export { name1, name2, ‚Ä¶, nameN };
// export default –≤—ã—Ä–∞–∂–µ–Ω–∏–µ;
// export * from ‚Ä¶;
// export default function (‚Ä¶) { ‚Ä¶ };
// –®–∞–±–ª–æ–Ω–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã (Template Literals)
// –®–∞–±–ª–æ–Ω–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã - —ç—Ç–æ –Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–æ–∫:

// const aString = `A string`;
// –û–Ω–∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —Å–ø–æ—Å–æ–± –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è –≤—ã—Ä–∞–∂–µ–Ω–∏–π –≤ —Å—Ç—Ä–æ–∫–∏, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏–Ω—Ç–µ—Ä–ø–æ–ª–∏—Ä—É—è –∑–Ω–∞—á–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è —Å–∏–Ω—Ç–∞–∫—Å–∏—Å ${–∏–º—è_–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π}:

// const name = "Alex";
// const string = `Hey ${name}`; // Hey Alex
// –¢—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è:

// const string = `total count is: ${1 + 2 + 3}`;
// const string2 = `result is ${foo() ? "x" : "y"}`;
// —Ç–∞–∫–∂–µ —Å—Ç—Ä–æ–∫–∏ –º–æ–≥—É—Ç –∑–∞–Ω–∏–º–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫:

// const string3 = `Hey
// this

// string
// is awesome!`;
// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
// –§—É–Ω–∫—Ü–∏–∏ —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:

// const sayMyName = function (name = "Alex") {
//   console.log(name);
// };
// sayMyName(); // Alex
// –ï—Å–ª–∏ –ø—Ä–∏ –≤—ã–≤–æ–∑–µ —Ñ—É–Ω–∫—Ü–∏–∏ name() –º—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç, —Ç–æ —Ç–æ–≥–¥–∞ –æ–Ω–∞ –≤–æ–∑—å–º–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "Alex".

// –û–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è spread
// –¢—ã –º–æ–∂–µ—à—å —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∏–ª–∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –º–∞—Å—Å–∏–≤, –æ–±—ä–µ–∫—Ç –∏–ª–∏ —Å—Ç—Ä–æ–∫—É, –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è ...

// –ù–∞—á–Ω–µ–º —Å –º–∞—Å—Å–∏–≤–∞.

// –£ –Ω–∞—Å –µ—Å—Ç—å –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤ const a = [1, 2, 3] –∫–æ—Ç–æ—Ä—ã–π –º—ã —Ö–æ—Ç–∏–º –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å, –¥–æ–±–∞–≤–∏–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π:

// const a = [1, 2, 3];
// const b = [...a, 4, 5, 6]; // [1, 2, 3, 4, 5, 6]
// –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ b –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è a, –ø–ª—é—Å —Å–≤–æ–∏.

// –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞:

// const c = [...a];
// spread —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –º–æ–∂–Ω–æ —Ç–∞–∫:

// const newObj = { ...oldObj };
// –ò—Å–ø–æ–ª—å–∑—É—è —Å—Ç—Ä–æ–∫–∏, –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è spread —Å–æ–∑–¥–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å –∫–∞–∂–¥—ã–º —Å–∏–º–≤–æ–ª–æ–º –≤ —Å—Ç—Ä–æ–∫–µ:

// const hey = "hey";
// const arrayized = [...hey]; // ['h', 'e', 'y']
// –£ —ç—Ç–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–æ–≤–æ–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤. –ù–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã–º –∏–∑ –Ω–∏—Ö —è–≤–ª—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏:

// const f = (one, two) => {
//   console.log(one, two); // 1, 2
// };
// const a = [1, 2];
// f(...a);
// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è - —ç—Ç–æ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ JavaScript, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –∏–∑–≤–ª–µ–∫–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤ –∏ –æ–±—ä–µ–∫—Ç–æ–≤.

// –ù–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–≥–¥–∞ —Å –¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –Ω–∞–º –Ω—É–∂–Ω–æ –∏–∑–≤–ª–µ—á—å —Ç–æ–ª—å–∫–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –∏—Ö –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Ç–∞–∫:

// const person = {
//   firstName: "Alex",
//   dev: true,
//   age: 28,
// };

// const name = person.firstName;
// const age = person.age;

// console.log(name, age); // Alex, 28
// –ù–æ —Ç–æ–≥–¥–∞ —É –Ω–∞—Å –≤—ã—Ö–æ–¥–∏—Ç –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è —Å–Ω–æ–≤–∞ –∏ —Å–Ω–æ–≤–∞, –∏ –Ω–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –º–∞—Å—Å–∏–≤–∞. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –º—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:

// const { firstName, age } = person;
// –ó–¥–µ—Å—å –º—ã —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –∏–º–µ–Ω–∞–º–∏ firstName, age –∏ –±–µ—Ä–µ–º –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –æ–±—ä–µ–∫—Ç–∞ person. –ò–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –º—ã –±–µ—Ä–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ firstName, age –∏ –ø–æ–º–µ—â–∞–µ–º –∏—Ö –≤ –¥–≤–µ –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤–∏–¥–Ω—ã —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –±–ª–æ–∫—É (–∏–ª–∏ window).

// –¢–∞–∫–∂–µ, –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –µ—Å–ª–∏ –æ–Ω–∞ –≤–∞–º –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ –∏–º—è, –≤–∞–∂–Ω–æ —á—Ç–æ –±—ã –∏–º—è –±—ã–ª–æ –Ω–µ –∑–∞–Ω—è—Ç–æ –≤ —Ç–≤–æ–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:

// const { firstName: name, age } = person;
// –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –º—ã –∏–∑–≤–ª–µ–∫–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Å firstName –∏–ª–∏ person.firstName –∏ –¥–∞–ª–∏ –µ–º—É –Ω–æ–≤–æ–µ –∏–º—è name.

// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è —Ç–∞–∫ –∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –º–∞—Å—Å–∏–≤–∞—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –∏ –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç—ã:

// const a = [1, 2, 3, 4, 5];
// const [first, second] = a;

// console.log(first, second); // 1, 2
// –ï—â–µ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –∫–∞–∫ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞:

// const [first, second, , , fifth] = a;

// console.log(first, second, fifth); // 1, 2, 5
// –≠—Ç–æ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Å–æ–∑–¥–∞–µ—Ç 3 –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –ø–æ–ª—É—á–∞—è —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ 0, 1, 4 –∏–∑ –º–∞—Å—Å–∏–≤–∞ a:

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª–æ–≤ –æ–±—ä–µ–∫—Ç–∞
// –ë–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
// –°—Ç–∞–ª –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –æ–Ω–∏ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∏–º–µ–Ω–∞. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ:

// const name = "Alex";
// const x = {
//   name: name,
// };
// –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å —Ç–∞–∫:

// const name = "Alex";
// const x = {
//   name,
// };
// –ü—Ä–æ—Ç–æ—Ç–∏–ø
// –ü—Ä–æ—Ç–æ—Ç–∏–ø –º–æ–∂–µ—Ç –±—ã—Ç—å —É–∫–∞–∑–∞–Ω —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º:

// const person = { name: "Alex" };
// const developer = {
//   __proto__: person,
// };
// super()
// const person = { name: "Alex", say: () => "Hello " };
// const developer = {
//   __proto__: person,
//   say() {
//     return super.say() + this.name;
//   },
// };
// developer.say(); // Hello Alex
// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
// –ò–º—è —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏.

// const x = {
//   ["a" + "_" + "b"]: "z",
// };
// x.a_b; // z
// –¶–∏–∫–ª for-of
// ES5 –µ—â–µ –≤ 2009 –≥–æ–¥—É –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª —Ü–∏–∫–ª forEach(). –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ –≤ —ç—Ç–æ–º —Ü–∏–∫–ª–µ –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ —Å–¥–µ–ª–∞—Ç—å —Ä–∞–∑—Ä—ã–≤ break, –∫–∞–∫ –≤ —Ü–∏–∫–ª–µ for.

// ES2015 –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª —Ü–∏–∫–ª for-of, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—á–µ—Ç–∞–µ—Ç –≤ —Å–µ–±–µ –∫—Ä–∞—Ç–∫–æ—Å—Ç—å forEach —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é break —Ä–∞–∑—Ä—ã–≤–∞:

// // –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
// for (const v of ["a", "b", "c"]) {
//   console.log(v);
// }

// // –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –∏ –∑–Ω–∞—á–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è `entries()`
// for (const [i, v] of ["a", "b", "c"].entries()) {
//   console.log(i, v);
//   if (i === 0) {
//     break;
//   }
// }
// entries() —ç—Ç–æ –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç iterator –ø–æ–∑–≤–æ–ª—è—è –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –≤—Å–µ–º –µ–≥–æ –∫–ª—é—á–∞–º/–∑–Ω–∞—á–µ–Ω–∏—è–º. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ—Ç –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é –º–∞—Å—Å–∏–≤–∞ –≥–¥–µ i - —ç—Ç–æ –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ, –∞ v - —ç—Ç–æ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ.

// Map –∏ Set
// Map –∏ Set (–∏ –∏—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–±–æ—Ä—â–∏–∫–∏ –º—É—Å–æ—Ä–∞ WeakMap –∏ WeakSet) —è–≤–ª—è—é—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è–º–∏ –¥–≤—É—Ö –æ—á–µ–Ω—å –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö. Map —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–∞—Ä—ã –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏. –õ—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞. Set –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ª—é–±–æ–≥–æ —Ç–∏–ø–∞.

// –ù–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã
// –õ—é–±–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—É—á–∏–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

// repeat() –ø–æ–≤—Ç–æ—Ä—è–µ—Ç —Å—Ç—Ä–æ–∫–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑: 'Ho'.repeat(3) // HoHoHo;
// codePointAt() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —è–≤–ª—è–µ—Ç—Å—è –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤ UTF-16 –∑–Ω–∞—á–µ–Ω–∏–µ–º –∫–æ–¥–æ–≤–æ–π —Ç–æ—á–∫–∏.
// –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞
// ES6 –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –∏–º–µ–Ω –æ–±—ä–µ–∫—Ç–∞:

// Object.is() –º–µ—Ç–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è—é—Ç—Å—è –ª–∏ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ var isSame = Object.is(value1, value2);
// Object.assign() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞ –≤ —Ü–µ–ª–µ–≤–æ–π –æ–±—ä–µ–∫—Ç Object.assign(target, ...sources);
// Object.setPrototypeOf —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ—Ç–æ—Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ Object.setPrototypeOf(obj, prototype).

// ES6
//
// class Person {
//   constructor(options) {
//     this.firstName = options.firstName
//     this.lastName = options.lastName
//     this.birthYear = options.birthYear
//     this.job = options.job
//     this.gender = options.gender
//   }
//   setHoobies(value) {
//     console.log(`My hoobies ${value}`)
//   }
//   getAge() {
//     return new Date().getFullYear() - this.birthYear
//   }
//   myGirl(name) {
//     console.log(`My love ${name}`)
//   }
// }

// const vladWide = new Person({
//   firstName: 'Vladislav',
//   lastName: 'Shyrokiy',
//   birthYear: 1996,
//   job: 'Front-End',
//   gender: 'male',
// })
